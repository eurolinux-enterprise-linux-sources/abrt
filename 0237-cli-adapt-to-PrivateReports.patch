From e71b30cd0f03391d62a8b20f8976b8d2b644a48d Mon Sep 17 00:00:00 2001
From: Jakub Filak <jfilak@redhat.com>
Date: Thu, 14 May 2015 07:34:36 +0200
Subject: [ABRT PATCH] cli: adapt to PrivateReports

Restart the process as root if PrivateReports is enabled.

We want to run abrt-cli with root privileges if PrivateReports=yes by default,
because we think that this is the most comfortable work-flow for our users and
we are not sure know how to inform users about the need to run abrt-cli with
root privileges in a different way.

We want to fall back to user privileges, because if a user wants to report a
problem in RHEL-6, ABRT moves the corresponding dump directory to the user's
home, so the directory becomes inaccessible for root in some cases.

Signed-off-by: Jakub Filak <jfilak@redhat.com>
---
 po/POTFILES.in                |  1 +
 src/cli/Makefile.am           | 11 +++++++++++
 src/cli/abrt-cli-core.c       | 24 ++++++++++++++++++++++++
 src/cli/abrt-cli-core.h       |  2 ++
 src/cli/abrt-cli-root.console |  2 ++
 src/cli/abrt-cli-root.pam     |  4 ++++
 src/cli/list.c                | 12 ++++++++++--
 src/cli/report.c              |  7 +++++--
 src/cli/rm.c                  |  9 +++++++--
 src/cli/status.c              |  2 ++
 10 files changed, 68 insertions(+), 6 deletions(-)
 create mode 100644 src/cli/abrt-cli-root.console
 create mode 100644 src/cli/abrt-cli-root.pam

diff --git a/po/POTFILES.in b/po/POTFILES.in
index bc84323..bc22a09 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -30,6 +30,7 @@ src/plugins/collect_xsession_errors.xml.in
 src/plugins/https-utils.c
 
 src/cli/abrt-cli.c
+src/cli/abrt-cli-core.c
 src/cli/list.c
 src/cli/status.c
 src/plugins/analyze_VMcore.xml.in
diff --git a/src/cli/Makefile.am b/src/cli/Makefile.am
index 3e4c976..86df86a 100644
--- a/src/cli/Makefile.am
+++ b/src/cli/Makefile.am
@@ -15,6 +15,7 @@ abrt_cli_SOURCES = $(CLI_C) $(BUILTIN_C) builtin-cmd.h abrt-cli-core.h
 abrt_cli_CFLAGS = \
 	-I$(srcdir)/../include \
 	-I$(srcdir)/../lib \
+	-DBIN_DIR=\"$(bindir)\" \
 	$(LIBREPORT_CFLAGS) \
 	-Wwrite-strings -Werror
 
@@ -27,3 +28,13 @@ dist_profileconfig_DATA = \
     abrt-console-notification.sh
 
 DEFS = -DLOCALEDIR=\"$(localedir)\" @DEFS@
+
+install-exec-hook:
+	ln -sf $(bindir)/consolehelper $(DESTDIR)$(bindir)/abrt-cli-root
+
+install-data-hook:
+	$(MKDIR_P) $(DESTDIR)$(sysconfdir)/pam.d $(DESTDIR)$(sysconfdir)/security/console.apps
+	$(INSTALL_DATA) abrt-cli-root.pam $(DESTDIR)$(sysconfdir)/pam.d/abrt-cli-root
+	$(INSTALL_DATA) abrt-cli-root.console $(DESTDIR)$(sysconfdir)/security/console.apps/abrt-cli-root
+
+EXTRA_DIST = abrt-cli-root.console abrt-cli-root.pam
diff --git a/src/cli/abrt-cli-core.c b/src/cli/abrt-cli-core.c
index 7533fda..b542f86 100644
--- a/src/cli/abrt-cli-core.c
+++ b/src/cli/abrt-cli-core.c
@@ -19,6 +19,7 @@
 
 #include "libabrt.h"
 #include "abrt-cli-core.h"
+#include <client.h>
 
 /* Vector of problems: */
 /* problem_data_vector[i] = { "name" = { "content", CD_FLAG_foo_bits } } */
@@ -93,3 +94,26 @@ vector_of_problem_data_t *fetch_crash_infos(GList *dir_list)
     return ci;
 }
 
+void restart_as_root_if_needed(unsigned cmd_argc, const char *cmd_argv[])
+{
+    if (g_settings_privatereports && getuid() == 0)
+        return;
+
+    log(_("PrivateReports is enabled. Only \"root\" can see the problems detected by ABRT."));
+
+    if (!ask_yes_no(_("Do you wan to run abrt-cli-root?")))
+        return;
+
+    int i = 0;
+    char **new_args = xmalloc((cmd_argc + 2)*sizeof(char *));
+    new_args[i++] = (char *)"abrt-cli-root";
+
+    for (unsigned j = 0; j < cmd_argc; )
+        new_args[i++] = (char *)cmd_argv[j++];
+
+    new_args[i++] = (char *)NULL;
+
+    execv(BIN_DIR"/abrt-cli-root", (char *const *)new_args);
+    perror_msg(_("Could not execute abrt-gui-root via consolehelper"));
+    exit(-1);
+}
diff --git a/src/cli/abrt-cli-core.h b/src/cli/abrt-cli-core.h
index 55a307b..e8be81d 100644
--- a/src/cli/abrt-cli-core.h
+++ b/src/cli/abrt-cli-core.h
@@ -29,4 +29,6 @@ vector_of_problem_data_t *new_vector_of_problem_data(void);
 problem_data_t *fill_crash_info(const char *dump_dir_name);
 vector_of_problem_data_t *fetch_crash_infos(GList *dir_list);
 
+void restart_as_root_if_needed(unsigned cmd_argc, const char *cmd_argv[]);
+
 #endif /* ABRT_CLI_CORE_H_ */
diff --git a/src/cli/abrt-cli-root.console b/src/cli/abrt-cli-root.console
new file mode 100644
index 0000000..bba66e3
--- /dev/null
+++ b/src/cli/abrt-cli-root.console
@@ -0,0 +1,2 @@
+USER=root
+PROGRAM=/usr/bin/abrt-cli
diff --git a/src/cli/abrt-cli-root.pam b/src/cli/abrt-cli-root.pam
new file mode 100644
index 0000000..1952d97
--- /dev/null
+++ b/src/cli/abrt-cli-root.pam
@@ -0,0 +1,4 @@
+#%PAM-1.0
+auth            include         config-util
+account         include         config-util
+session         include         config-util
diff --git a/src/cli/list.c b/src/cli/list.c
index 0ba64c1..8c6f7c7 100644
--- a/src/cli/list.c
+++ b/src/cli/list.c
@@ -101,6 +101,10 @@ int cmd_list(int argc, const char **argv)
     };
 
     parse_opts(argc, (char **)argv, program_options, program_usage_string);
+
+    load_abrt_conf();
+    restart_as_root_if_needed(argc, argv);
+
     argv += optind;
 
     GList *D_list = NULL;
@@ -143,11 +147,15 @@ int cmd_info(int argc, const char **argv)
     };
 
     parse_opts(argc, (char **)argv, program_options, program_usage_string);
-    argv += optind;
 
-    if (!argv[0])
+    if (!argv[optind])
         show_usage_and_die(program_usage_string, program_options);
 
+    load_abrt_conf();
+    restart_as_root_if_needed(argc, argv);
+
+    argv += optind;
+
     int errs = 0;
     while (*argv)
     {
diff --git a/src/cli/report.c b/src/cli/report.c
index e20bb96..89cfdcd 100644
--- a/src/cli/report.c
+++ b/src/cli/report.c
@@ -34,12 +34,15 @@ int cmd_report(int argc, const char **argv)
     };
 
     parse_opts(argc, (char **)argv, program_options, program_usage_string);
-    argv += optind;
 
-    if (!argv[0])
+    if (!argv[optind])
         show_usage_and_die(program_usage_string, program_options);
 
     load_abrt_conf();
+    restart_as_root_if_needed(argc, argv);
+
+    argv += optind;
+
     char *home = getenv("HOME");
     GList *D_list = NULL;
     if (home)
diff --git a/src/cli/rm.c b/src/cli/rm.c
index 8f185a4..80e7983 100644
--- a/src/cli/rm.c
+++ b/src/cli/rm.c
@@ -19,6 +19,7 @@
 
 #include "libabrt.h"
 #include "builtin-cmd.h"
+#include "abrt-cli-core.h"
 
 /* TODO npajkovs:
  *   add -n, --dry-run
@@ -37,11 +38,15 @@ int cmd_rm(int argc, const char **argv)
     };
 
     parse_opts(argc, (char **)argv, program_options, program_usage_string);
-    argv += optind;
 
-    if (!argv[0])
+    if (!argv[optind])
         show_usage_and_die(program_usage_string, program_options);
 
+    load_abrt_conf();
+    restart_as_root_if_needed(argc, argv);
+
+    argv += optind;
+
     int errs = 0;
     while (*argv)
     {
diff --git a/src/cli/status.c b/src/cli/status.c
index 6f228c6..ec664d8 100644
--- a/src/cli/status.c
+++ b/src/cli/status.c
@@ -42,6 +42,8 @@ int cmd_status(int argc, const char **argv)
     parse_opts(argc, (char **)argv, program_options, program_usage_string);
     argv += optind;
 
+    /* Don't use restart_as_root_if_needed() -> this command is called from an etc/profile.d script */
+
     GList *problem_dir_list = NULL;
     while (*argv)
         problem_dir_list = g_list_append(problem_dir_list, xstrdup(*argv++));
-- 
1.8.3.1

