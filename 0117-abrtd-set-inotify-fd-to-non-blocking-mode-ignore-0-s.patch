From 87bb7d2b5452054bce605d01ecc72d8ed318a8e8 Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <vda.linux@googlemail.com>
Date: Tue, 11 Dec 2012 15:23:38 +0100
Subject: [PATCH 117/123] abrtd: set inotify fd to non-blocking mode; ignore
 0-sized inotify reads. Closes rhbz#873815

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
---
 src/daemon/abrtd.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/src/daemon/abrtd.c b/src/daemon/abrtd.c
index 1afec1e..36a6c0e 100644
--- a/src/daemon/abrtd.c
+++ b/src/daemon/abrtd.c
@@ -391,13 +391,18 @@ static gboolean handle_inotify_cb(GIOChannel *gio, GIOCondition condition, gpoin
     /* NB: this variable _must_ be int-sized, ioctl expects that! */
     int inotify_bytes = INOTIFY_BUF_SIZE;
     if (ioctl(g_io_channel_unix_get_fd(gio), FIONREAD, &inotify_bytes) != 0
-     || inotify_bytes < sizeof(struct inotify_event)
+    /*|| inotify_bytes < sizeof(struct inotify_event)
+         ^^^^^^^^^^^^^^^^^^^ - WRONG: legitimate 0 was seen when flooded with inotify events
+    */
      || inotify_bytes > INOTIFY_BUF_SIZE
     ) {
         inotify_bytes = INOTIFY_BUF_SIZE;
     }
     VERB3 log("FIONREAD:%d", inotify_bytes);
 
+    if (inotify_bytes == 0)
+        return TRUE; /* "please don't remove this event" */
+
     char *buf = (char*)xmalloc(inotify_bytes);
     errno = 0;
     gsize len;
@@ -407,6 +412,8 @@ static gboolean handle_inotify_cb(GIOChannel *gio, GIOCondition condition, gpoin
     {
         perror_msg("Error reading inotify fd: %s", gerror ? gerror->message : "unknown");
         free(buf);
+        if (gerror)
+            g_error_free(gerror);
         return FALSE; /* "remove this event" (huh??) */
     }
 
@@ -779,6 +786,10 @@ int main(int argc, char** argv)
         }
     }
     VERB1 log("Adding inotify watch to glib main loop");
+    /* Without nonblocking mode, users observed abrtd blocking
+     * on inotify read forever. Must set fd to non-blocking:
+     */
+    ndelay_on(inotify_fd);
     channel_inotify = g_io_channel_unix_new(inotify_fd);
 
     GError *gerror = NULL;
-- 
1.8.0.1

