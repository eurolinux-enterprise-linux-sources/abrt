From dcccbf382c865859148c8f00537112308f9c7575 Mon Sep 17 00:00:00 2001
From: Richard Marko <rmarko@fedoraproject.org>
Date: Thu, 9 May 2013 13:57:04 +0200
Subject: [ABRT EL6 PATCH 184/197] abrt-python: fix deprecation warnings

Signed-off-by: Richard Marko <rmarko@fedoraproject.org>
---
 src/python-problem/problem/__init__.py |  4 ++--
 src/python-problem/problem/proxies.py  | 10 +++++-----
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/python-problem/problem/__init__.py b/src/python-problem/problem/__init__.py
index a211c0b..65804a1 100644
--- a/src/python-problem/problem/__init__.py
+++ b/src/python-problem/problem/__init__.py
@@ -113,7 +113,7 @@ class Problem(object):
         try:
             return self.__getattr__(attr)
         except AttributeError as e:
-            raise KeyError(e.message)
+            raise KeyError(e)
 
     def __setitem__(self, attr, value):
         self.__setattr__(attr, value)
@@ -122,7 +122,7 @@ class Problem(object):
         try:
             self.__delattr__(attr)
         except AttributeError as e:
-            raise KeyError(e.message)
+            raise KeyError(e)
 
     def __repr__(self):
         return '<problem.{0} ({1})>'.format(self.__class__.__name__, self.reason)
diff --git a/src/python-problem/problem/proxies.py b/src/python-problem/problem/proxies.py
index 0b1c7df..d4b3cfa 100644
--- a/src/python-problem/problem/proxies.py
+++ b/src/python-problem/problem/proxies.py
@@ -17,7 +17,7 @@ class DBusProxy(object):
 
     def __new__(cls, *args, **kwargs):
         if not cls.__instance:
-            cls.__instance = super(DBusProxy, cls).__new__(cls, *args, **kwargs)
+            cls.__instance = super(DBusProxy, cls).__new__(cls)
 
         return cls.__instance
 
@@ -29,14 +29,14 @@ class DBusProxy(object):
             self._proxy = self.dbus.SystemBus().get_object(
                 'org.freedesktop.problems', '/org/freedesktop/problems')
         except self.dbus.exceptions.DBusException as e:
-            logging.debug('Unable to get dbus proxy: {0}'.format(e.message))
+            logging.debug('Unable to get dbus proxy: {0}'.format(e))
             return
 
         try:
             self._iface = self.dbus.Interface(self._proxy,
                                               'org.freedesktop.problems')
         except self.dbus.exceptions.DBusException as e:
-            logging.debug('Unable to get dbus interface: {0}'.format(e.message))
+            logging.debug('Unable to get dbus interface: {0}'.format(e))
             return
 
         self.connected = True
@@ -52,10 +52,10 @@ class DBusProxy(object):
                 return getattr(self._iface, fun_name)(*args)
 
             if dbname == 'org.freedesktop.problems.AuthFailure':
-                raise problem.exception.AuthFailure(e.message)
+                raise problem.exception.AuthFailure(e)
 
             if dbname == 'org.freedesktop.problems.InvalidProblemDir':
-                raise problem.exception.InvalidProblem(e.message)
+                raise problem.exception.InvalidProblem(e)
 
             raise
 
-- 
1.8.2.1

