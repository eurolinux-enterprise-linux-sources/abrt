From b4ffee76ac3811429d37fec7df5950a01821efc8 Mon Sep 17 00:00:00 2001
From: Jakub Filak <jfilak@redhat.com>
Date: Wed, 7 May 2014 16:17:45 +0200
Subject: [ABRT PATCH] add augeas module for abrt configuration files

Uses the lens from the Libreport module since abrt uses libreport for
loading and saving configuration files.

The module only specifies the included files.

Related to abrt/libreport#205

Signed-off-by: Jakub Filak <jfilak@redhat.com>

mmilata: stop configure if augparse not found

Conflicts:

	configure.ac
---
 Makefile.am          |  9 ++++-
 augeas/abrt.aug      | 12 +++++++
 augeas/test_abrt.aug | 95 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.ac         | 15 +++++++++
 4 files changed, 130 insertions(+), 1 deletion(-)
 create mode 100644 augeas/abrt.aug
 create mode 100644 augeas/test_abrt.aug

diff --git a/Makefile.am b/Makefile.am
index 32a46aa..4dc2c7c 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -22,11 +22,18 @@ TESTSUITE_FILES += examples/oops_recursive_locking1.test
 TESTSUITE_FILES += examples/oops_recursive_locking1-no-jiffies.test
 
 EXTRA_DIST = doc/coding-style abrt.spec.in abrt.pc.in \
-	abrt-version asciidoc.conf init-scripts/* $(TESTSUITE_FILES)
+	abrt-version asciidoc.conf init-scripts/* $(TESTSUITE_FILES) \
+	augeas/test_abrt.aug
 
 pkgconfigdir = $(libdir)/pkgconfig
 pkgconfig_DATA = abrt.pc
 
+augeasdir = $(AUGEAS_LENS_LIB_DIR)
+dist_augeas_DATA = augeas/abrt.aug
+
+check-local:
+	$(AUGPARSE) -I $(top_builddir)/augeas $(top_builddir)/augeas/test_abrt.aug
+
 if HAVE_SYSTEMD
     dist_systemdsystemunit_DATA = init-scripts/abrtd.service \
                                   init-scripts/abrt-ccpp.service \
diff --git a/augeas/abrt.aug b/augeas/abrt.aug
new file mode 100644
index 0000000..1f95b7f
--- /dev/null
+++ b/augeas/abrt.aug
@@ -0,0 +1,12 @@
+module Abrt =
+    autoload xfm
+
+    let lns = Libreport.lns
+
+    let filter = (incl "/etc/abrt/*" )
+               . (incl "/etc/abrt/plugins/*")
+               . (incl "/usr/share/abrt/conf.d/*")
+               . (incl "/usr/share/abrt/conf.d/plugins/*")
+               . Util.stdexcl
+
+   let xfm = transform lns filter
diff --git a/augeas/test_abrt.aug b/augeas/test_abrt.aug
new file mode 100644
index 0000000..70802fc
--- /dev/null
+++ b/augeas/test_abrt.aug
@@ -0,0 +1,95 @@
+module Test_abrt =
+
+    let conf ="# Enable this if you want abrtd to auto-unpack crashdump tarballs which appear
+# in this directory (for example, uploaded via ftp, scp etc).
+# Note: you must ensure that whatever directory you specify here exists
+# and is writable for abrtd. abrtd will not create it automatically.
+#
+#WatchCrashdumpArchiveDir = /var/spool/abrt-upload
+
+# Max size for crash storage [MiB] or 0 for unlimited
+#
+MaxCrashReportsSize = 1000
+
+# Specify where you want to store coredumps and all files which are needed for
+# reporting. (default:/var/tmp/abrt)
+#
+# Changing dump location could cause problems with SELinux. See man abrt_selinux(8).
+#
+#DumpLocation = /var/tmp/abrt
+
+# If you want to automatically clean the upload directory you have to tweak the
+# selinux policy.
+#
+DeleteUploaded = no
+
+# A name of event which is run automatically after problem's detection. The
+# event should perform some fast analysis and exit with 70 if the
+# problem is known.
+#
+# In order to run this event automatically after detection, the
+# AutoreportingEnabled option must be configured to 'yes'
+#
+# Default value: report_uReport
+#
+AutoreportingEvent = report_uReport
+
+# Enables automatic running of the event configured in AutoreportingEvent option.
+#
+AutoreportingEnabled = no
+
+# Enables shortened GUI reporting where the reporting is interrupted after
+# AutoreportingEvent is done.
+#
+# Default value: Yes but only if application is running in GNOME desktop
+#                session; otherwise No.
+#
+# ShortenedReporting = yes
+"
+
+    test Abrt.lns get conf =
+        { "#comment" = "Enable this if you want abrtd to auto-unpack crashdump tarballs which appear" }
+        { "#comment" = "in this directory (for example, uploaded via ftp, scp etc)." }
+        { "#comment" = "Note: you must ensure that whatever directory you specify here exists" }
+        { "#comment" = "and is writable for abrtd. abrtd will not create it automatically." }
+        { "#comment" = "" }
+        { "#comment" = "WatchCrashdumpArchiveDir = /var/spool/abrt-upload" }
+        {}
+        { "#comment" = "Max size for crash storage [MiB] or 0 for unlimited" }
+        { "#comment" = "" }
+        { "MaxCrashReportsSize" = "1000" }
+        {}
+        { "#comment" = "Specify where you want to store coredumps and all files which are needed for" }
+        { "#comment" = "reporting. (default:/var/tmp/abrt)" }
+        { "#comment" = "" }
+        { "#comment" = "Changing dump location could cause problems with SELinux. See man abrt_selinux(8)." }
+        { "#comment" = "" }
+        { "#comment" = "DumpLocation = /var/tmp/abrt" }
+        {}
+        { "#comment" = "If you want to automatically clean the upload directory you have to tweak the" }
+        { "#comment" = "selinux policy." }
+        { "#comment" = "" }
+        { "DeleteUploaded" = "no" }
+        {}
+        { "#comment" = "A name of event which is run automatically after problem's detection. The" }
+        { "#comment" = "event should perform some fast analysis and exit with 70 if the" }
+        { "#comment" = "problem is known." }
+        { "#comment" = "" }
+        { "#comment" = "In order to run this event automatically after detection, the" }
+        { "#comment" = "AutoreportingEnabled option must be configured to 'yes'" }
+        { "#comment" = "" }
+        { "#comment" = "Default value: report_uReport" }
+        { "#comment" = "" }
+        { "AutoreportingEvent" = "report_uReport" }
+        {}
+        { "#comment" = "Enables automatic running of the event configured in AutoreportingEvent option." }
+        { "#comment" = "" }
+        { "AutoreportingEnabled" = "no" }
+        {}
+        { "#comment" = "Enables shortened GUI reporting where the reporting is interrupted after" }
+        { "#comment" = "AutoreportingEvent is done." }
+        { "#comment" = "" }
+        { "#comment" = "Default value: Yes but only if application is running in GNOME desktop" }
+        { "#comment" = "session; otherwise No." }
+        { "#comment" = "" }
+        { "#comment" = "ShortenedReporting = yes" }
diff --git a/configure.ac b/configure.ac
index d267f65..46d9a99 100644
--- a/configure.ac
+++ b/configure.ac
@@ -105,6 +105,21 @@ DEFAULT_PLUGINS_CONF_DIR='${datadir}/${PACKAGE_NAME}/conf.d/plugins'
 EVENTS_CONF_DIR='${sysconfdir}/libreport/events.d'
 ENABLE_SOCKET_OR_DBUS='-DENABLE_DBUS=1'
 
+AC_ARG_WITH(augeaslenslibdir,
+                    [AS_HELP_STRING([--with-augeaslenslibdir=DIR],
+                                                   [Directory for librepor lens (default: /usr/share/augeas/lenses)])],
+                                [], [with_augeaslenslibdir="/usr/share/augeas/lenses"])
+AC_SUBST([AUGEAS_LENS_LIB_DIR], [$with_augeaslenslibdir])
+
+AC_PATH_PROG(AUGPARSE, augparse, no)
+[if test "$ARGPARSE" = "no"]
+[then]
+    [echo "The argparse program was not found in the search path. Please ensure"]
+    [echo "that it is installed and its directory is included in the search path."]
+    [echo "Then run configure again before attempting to build ABRT."]
+    [exit 1]
+[fi]
+
 # Make satyr use GDB or elfutils/libunwind for unwinding?
 
 AC_ARG_ENABLE([native-unwinder],
-- 
1.8.3.1

